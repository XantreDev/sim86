---
source: src/main.rs
expression: "str::from_utf8(res.as_slice()).unwrap()"
snapshot_kind: text
---
mov dx, 6 ; dx 0x0000 -> 0x0006
mov bp, 1000 ; bp 0x0000 -> 0x03e8
mov si, 0 ; si 0x0000 -> 0x0000
mov [bp+si], si ; 0x0000 -> (0x03f0)
add si, 2 ; si 0x0000 -> 0x0002 flags: None -> None
cmp si, dx ; flags: None -> CPAS
jne $-7+0 ; ip 0x0007 -> 0x0009
mov [bp+si], si ; 0x0002 -> (0x03f2)
add si, 2 ; si 0x0002 -> 0x0004 flags: CPAS -> None
cmp si, dx ; flags: None -> CAS
jne $-7+0 ; ip 0x0007 -> 0x0009
mov [bp+si], si ; 0x0004 -> (0x03f4)
add si, 2 ; si 0x0004 -> 0x0006 flags: CAS -> P
cmp si, dx ; flags: P -> PZ
jne $-7+0 ; ip 0x0010 -> 0x0012
mov bx, 0 ; bx 0x0000 -> 0x0000
mov si, dx ; si 0x0006 -> 0x0006
sub bp, 2 ; bp 0x03e8 -> 0x03e6 flags: PZ -> None
add bx, [bp+si] ; bx 0x0000 -> 0x0004 flags: None -> None
sub si, 2 ; si 0x0006 -> 0x0004 flags: None -> None
jne $-5+0 ; ip 0x0018 -> 0x001a
add bx, [bp+si] ; bx 0x0004 -> 0x0006 flags: None -> P
sub si, 2 ; si 0x0004 -> 0x0002 flags: P -> None
jne $-5+0 ; ip 0x0018 -> 0x001a
add bx, [bp+si] ; bx 0x0006 -> 0x0006 flags: None -> P
sub si, 2 ; si 0x0002 -> 0x0000 flags: P -> PZ
jne $-5+0 ; ip 0x001f -> 0x0021

Final registers: 
ax 0x0000 (0)
bx 0x0006 (6)
cx 0x0000 (0)
dx 0x0006 (6)
sp 0x0000 (0)
bp 0x03e6 (998)
si 0x0000 (0)
di 0x0000 (0)
ip: 0x0021 (33)
flags: PZ
